#!/usr/bin/env node

var http = require('http'),
    fs = require('fs'),
    mri = require('mri'),
    serve = require('../');

var helpText = `Usage: serve-script [file] [options]

file     JS file to serve (default stdin)

Options:
   -p, --port     Port to listen on  [8000]
   --no-console   Disable console.log redirection`;

var opts = mri(process.argv.slice(2), {
  boolean: ['console'],
  alias: { port: 'p' },
  default:{ console: true, port: 8080 },
});

opts.file = opts._[0];
opts['no-console'] = !opts.console;

if (opts.file == null) {
    console.log(helpText);
    return;
}

function getSource(callback) {
    if (!opts.file) {
        var src = '';
        process.stdin.resume();
        process.stdin.on('data', function(data) {
            src += data.toString();
        });
        process.stdin.on('close', function() {
            callback(src);
        });
    } else {
        callback(function(callback) {
            callback(null, fs.createReadStream(opts.file));
        });
    }
}

getSource(function(src) {
    var handler = serve({
        noConsole: opts['no-console'],
        src: src
    });

    http.createServer(handler)
        .listen(opts.port, function(err) {
            if (err) {
                throw err;
            }

            console.log('Listening on port ' + opts.port);
        });
});